package br.ifpr.paranavai.crudbasicoatividadeii.visao;

import br.ifpr.paranavai.crudbasicoatividadeii.entidade.ItemPedido;
import br.ifpr.paranavai.crudbasicoatividadeii.entidade.Pedido;
import br.ifpr.paranavai.crudbasicoatividadeii.entidade.Produto;
import br.ifpr.paranavai.crudbasicoatividadeii.exceptions.PersistenceException;
import br.ifpr.paranavai.crudbasicoatividadeii.interfaces.IItemPedido;
import br.ifpr.paranavai.crudbasicoatividadeii.interfaces.IPedido;
import br.ifpr.paranavai.crudbasicoatividadeii.interfaces.IProduto;
import br.ifpr.paranavai.crudbasicoatividadeii.persistencia.ItemPedidoDAO;
import br.ifpr.paranavai.crudbasicoatividadeii.persistencia.PedidoDAO;
import br.ifpr.paranavai.crudbasicoatividadeii.persistencia.ProdutoDAO;
import br.ifpr.paranavai.crudbasicoatividadeii.utils.Utils;
import br.ifpr.paranavai.crudbasicoatividadeii.validacao.Validacao;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Sidney
 */
public class CadastroPedido extends javax.swing.JFrame {
    
    private int copiaIdPedido;
    private int copiaIdItemPedido;
    private Pedido pedido;
    private static List<ItemPedido> listItemPedido = new ArrayList<>();
    
    /**
     * Creates new form CadastroPedido
     */
    public CadastroPedido() {
        initComponents();
//        SwingUtilities.invokeLater(newAtualizaPedidosAction());
        SwingUtilities.invokeLater(newAtualizaProdutosAction());
        habilitarDesabilitarCampos(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        painelPedidos = new javax.swing.JTextPane();
        botaoIncluir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        campoIdPedido = new javax.swing.JTextField();
        botaoAlterar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        campoDataPedido = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        campoDescricao = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        campoNome = new javax.swing.JTextField();
        campoQtdEntrada = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        campoQtdSaida = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        campoCodBarras = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        campoIdProduto = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        botaoBuscarProduto = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        painelProdutos = new javax.swing.JTextPane();
        botaoDeletarItemPedido = new javax.swing.JButton();
        botaoSalvarItemPedido = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        campoQtdItemPedido = new javax.swing.JTextField();
        botaoBuscarPedido = new javax.swing.JButton();
        botaoSalvarPedido = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pedido");

        painelPedidos.setEditable(false);
        jScrollPane1.setViewportView(painelPedidos);

        botaoIncluir.setText("Incluir");
        botaoIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoIncluirActionPerformed(evt);
            }
        });

        jLabel3.setText("Id:");

        botaoAlterar.setText("Alterar");
        botaoAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlterarActionPerformed(evt);
            }
        });

        jLabel7.setText("Data do Pedido:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Produto")));

        jLabel1.setText("Nome:");

        jLabel4.setText("Qtd. Saída:");

        jLabel2.setText("Qtd. Entrada:");

        jLabel5.setText("Cód. de Barras:");

        jLabel6.setText("Descrição:");

        jLabel8.setText("Id:");

        botaoBuscarProduto.setText("Buscar");
        botaoBuscarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoBuscarProdutoActionPerformed(evt);
            }
        });

        painelProdutos.setEditable(false);
        jScrollPane2.setViewportView(painelProdutos);

        botaoDeletarItemPedido.setText("Deletar");
        botaoDeletarItemPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDeletarItemPedidoActionPerformed(evt);
            }
        });

        botaoSalvarItemPedido.setText("Salvar");
        botaoSalvarItemPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarItemPedidoActionPerformed(evt);
            }
        });

        jLabel9.setText("Qtd. Item do Pedido:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(campoDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(campoNome))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(campoIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(botaoBuscarProduto))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(campoCodBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(campoQtdEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(campoQtdSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(botaoSalvarItemPedido)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoDeletarItemPedido))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoQtdItemPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(campoIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botaoBuscarProduto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(campoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(campoDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(campoQtdEntrada)
                            .addComponent(jLabel4)
                            .addComponent(campoQtdSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(campoCodBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(campoQtdItemPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoSalvarItemPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoDeletarItemPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6))
        );

        botaoBuscarPedido.setText("Buscar");
        botaoBuscarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoBuscarPedidoActionPerformed(evt);
            }
        });

        botaoSalvarPedido.setText("Salvar");
        botaoSalvarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarPedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(campoIdPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoBuscarPedido))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoDataPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(botaoIncluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoAlterar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoSalvarPedido)))
                .addGap(0, 12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoIncluir)
                    .addComponent(botaoAlterar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(campoIdPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoBuscarPedido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoSalvarPedido)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(campoDataPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoIncluirActionPerformed
        habilitarDesabilitarCampos(TipoBotao.incluir);
    }//GEN-LAST:event_botaoIncluirActionPerformed

    private void botaoBuscarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoBuscarProdutoActionPerformed
        if (Utils.isNumber(campoIdProduto.getText())) {
           try {
                IProduto iProduto = new ProdutoDAO();
                Produto p = iProduto.findById(Integer.parseInt(campoIdProduto.getText()));
                
                if (p != null) {
                    String strQtdSaida = p.getQtdSaida() == null ? "0" : p.getQtdSaida().toString();
                    System.out.println("Nome: " + p.getNome());
                    System.out.println("Descricao: " + p.getDescricao());
                    System.out.println("Qtd.Ent.: " + p.getQtdEntrada());
                    System.out.println("Qtd.Sai.: " + strQtdSaida);
                    System.out.println("Cod.Barras: " + p.getCodigoBarras());
                    
                    campoNome.setText(p.getNome());
                    campoDescricao.setText(p.getDescricao());
                    campoQtdEntrada.setText(p.getQtdEntrada().toString());
                    campoQtdSaida.setText(strQtdSaida);
                    campoCodBarras.setText(p.getCodigoBarras());
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, 
                        ex.getMessage(), "Erro ao pesquisar produto.", JOptionPane.ERROR_MESSAGE);
            } 
        } else {
            JOptionPane.showMessageDialog(this, "Digite número do Id válido.", 
                    "Campo Id", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_botaoBuscarProdutoActionPerformed

    private void botaoAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAlterarActionPerformed
        habilitarDesabilitarCampos(TipoBotao.editar);
    }//GEN-LAST:event_botaoAlterarActionPerformed

    private void botaoBuscarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoBuscarPedidoActionPerformed
        if (Utils.isNumber(campoIdPedido.getText())) {
           try {
                IPedido iPedido = new PedidoDAO();
                Pedido pedido = iPedido.findById(Integer.parseInt(campoIdPedido.getText()));
                
                if (pedido != null) {
                    campoDataPedido.setText(pedido.getDataPedido());
                    painelPedidos.setText("");
                    IItemPedido iItemPedido = new ItemPedidoDAO();
                    
                    for (ItemPedido ip : iItemPedido.getByPedidos(pedido)) {
                        listItemPedido.add(ip);
                    }
//                    listItemPedido = iItemPedido.getByPedidos(pedido);
                    
                    String strPedido = " ===== Pedido ===== \n";
                    strPedido += "Id: " + pedido.getId() + "\n";
                    strPedido += "Data do Pedido: " + pedido.getDataPedido() + "\n";
                    strPedido += "\n ===== Item do Pedido ===== \n";

                    for (ItemPedido ip : listItemPedido) {
                        strPedido += "Nome: " + ip.getProdutos().getNome() + "\n";
                        strPedido += "Qtd. do pedido: " + ip.getQtd() + "\n";
                    }
                    
                    painelPedidos.setText(strPedido);
                }
                
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, 
                        ex.getMessage(), "Erro ao pesquisar pedido.", JOptionPane.ERROR_MESSAGE);
            } 
        } else {
            JOptionPane.showMessageDialog(this, "Digite número do Id válido.", 
                    "Campo Id", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_botaoBuscarPedidoActionPerformed

    private void botaoSalvarItemPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarItemPedidoActionPerformed
        List<String> listaObrigatorio = Validacao.ValidaCamposItemPedido(Integer.parseInt(campoIdProduto.getText()),
                Integer.parseInt(campoQtdItemPedido.getText()));
        
        if (listaObrigatorio.size() > 0) {
            String msg = "";
            msg = listaObrigatorio.stream().map((str) -> str + "\n").reduce(msg, String::concat);
            JOptionPane.showMessageDialog(this, msg, "Validação", JOptionPane.WARNING_MESSAGE);
        } else {
            if (campoIdProduto.isEnabled()) {
                if(!Utils.isNumber(campoIdProduto.getText())) {
                    JOptionPane.showMessageDialog(this, "Preencher o campo Id válido.", 
                            "Validação", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }
            
            Produto produto = new Produto(campoIdProduto.getText().isBlank() ? null : Integer.parseInt(campoIdProduto.getText()), 
                    campoNome.getText(), campoDescricao.getText(),
                    Integer.parseInt(campoQtdEntrada.getText()), 
                    campoQtdSaida.getText().isBlank() ? null : Integer.parseInt(campoQtdSaida.getText()),
                    campoCodBarras.getText());
            
            System.out.println("==== Produto ===");
            System.out.println("Id: " + produto.getId());
            System.out.println("Nome: " + produto.getNome());
            System.out.println("Descrição: " + produto.getDescricao());
            System.out.println("Qtd.Ent.: " + produto.getQtdEntrada());
            System.out.println("Qtd.Sai.: " + produto.getQtdSaida());
            
            IPedido iPedido = new PedidoDAO();
            copiaIdPedido = iPedido.findUltimoId();
            
            pedido = iPedido.findById(copiaIdPedido);
            
            ItemPedido itemPedido = new ItemPedido(null, pedido, produto, Integer.parseInt(campoQtdItemPedido.getText()));
            
            IItemPedido iItemPedido = new ItemPedidoDAO();
            iItemPedido.save(itemPedido);
            
            copiaIdItemPedido = iItemPedido.findUltimoId();
            itemPedido.setId(copiaIdItemPedido);
            
            listItemPedido.add(itemPedido);
            
            SwingUtilities.invokeLater(newAtualizaProdutosAction());
            SwingUtilities.invokeLater(newAtualizaPedidosAction());
//            habilitarDesabilitarCampos(null);
        }
    }//GEN-LAST:event_botaoSalvarItemPedidoActionPerformed

    private void botaoDeletarItemPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDeletarItemPedidoActionPerformed
        if(Utils.isNumber(campoIdProduto.getText())) {
            try {
                IPedido iPedido = new PedidoDAO();
                copiaIdPedido = iPedido.findUltimoId();
                pedido = iPedido.findById(copiaIdPedido);
            
                IProduto iProduto = new ProdutoDAO();
                Produto p = iProduto.findById(Integer.parseInt(campoIdProduto.getText()));
                IItemPedido iItemPedido = new ItemPedidoDAO();
                ItemPedido itemPedido = iItemPedido.findProduto(p, pedido);
                
                if (itemPedido != null) {
                    listItemPedido.remove(itemPedido);
                    iItemPedido.remove(itemPedido);
                }
                    
                
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, 
                        ex.getMessage(), "Erro ao excluir Item do Pedido.", JOptionPane.ERROR_MESSAGE);
            }
            
            SwingUtilities.invokeLater(newAtualizaPedidosAction());
        } else {
            JOptionPane.showMessageDialog(this, "Preencher o campo Id válido.", 
                    "Validação", JOptionPane.WARNING_MESSAGE);
        } 
    }//GEN-LAST:event_botaoDeletarItemPedidoActionPerformed

    private void botaoSalvarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarPedidoActionPerformed
        List<String> listaObrigatorio = Validacao.ValidaCamposPedido(campoDataPedido.getText());
        
        if (listaObrigatorio.size() > 0) {
            String msg = "";
            msg = listaObrigatorio.stream().map((str) -> str + "\n").reduce(msg, String::concat);
            JOptionPane.showMessageDialog(this, msg, "Validação", JOptionPane.WARNING_MESSAGE);
        } else {
            if (campoIdPedido.isEnabled()) {
                if(!Utils.isNumber(campoIdPedido.getText())) {
                    JOptionPane.showMessageDialog(this, "Preencher o campo Id válido.", 
                            "Validação", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }
            
            Pedido p = new Pedido(campoIdPedido.getText().isBlank() ? null : Integer.parseInt(campoIdPedido.getText()),
                campoDataPedido.getText(), null);
            
            IPedido iPedido = new PedidoDAO();
            iPedido.save(p);
            
            SwingUtilities.invokeLater(newAtualizaPedidosAction());
            SwingUtilities.invokeLater(newAtualizaProdutosAction());
//            habilitarDesabilitarCampos(null);
            
            if (!campoDataPedido.getText().isEmpty()) {
                campoDataPedido.setEnabled(false);
                campoIdProduto.setEnabled(true);
                campoQtdItemPedido.setEnabled(true);
                botaoSalvarItemPedido.setEnabled(true);
                botaoDeletarItemPedido.setEnabled(true);
                botaoBuscarProduto.setEnabled(true);
            }
        }
    }//GEN-LAST:event_botaoSalvarPedidoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroPedido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAlterar;
    private javax.swing.JButton botaoBuscarPedido;
    private javax.swing.JButton botaoBuscarProduto;
    private javax.swing.JButton botaoDeletarItemPedido;
    private javax.swing.JButton botaoIncluir;
    private javax.swing.JButton botaoSalvarItemPedido;
    private javax.swing.JButton botaoSalvarPedido;
    private javax.swing.JTextField campoCodBarras;
    private javax.swing.JTextField campoDataPedido;
    private javax.swing.JTextField campoDescricao;
    private javax.swing.JTextField campoIdPedido;
    private javax.swing.JTextField campoIdProduto;
    private javax.swing.JTextField campoNome;
    private javax.swing.JTextField campoQtdEntrada;
    private javax.swing.JTextField campoQtdItemPedido;
    private javax.swing.JTextField campoQtdSaida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane painelPedidos;
    private javax.swing.JTextPane painelProdutos;
    // End of variables declaration//GEN-END:variables
       
    
    
    private void habilitarDesabilitarCampos(TipoBotao tipo) {
        limpaCampos();
                
        if (null == tipo) {
            campoIdPedido.setEnabled(false);
            campoDataPedido.setEnabled(false);
            campoIdProduto.setEnabled(false);
            campoNome.setEnabled(false);
            campoDescricao.setEnabled(false);
            campoQtdEntrada.setEnabled(false);
            campoQtdSaida.setEnabled(false);
            campoCodBarras.setEnabled(false);
            campoQtdItemPedido.setEnabled(false);
            botaoBuscarProduto.setEnabled(false);
            botaoBuscarPedido.setEnabled(false);
        } else switch (tipo) {
            case incluir:
                campoIdPedido.setEnabled(false);
                campoDataPedido.setEnabled(true);
                campoIdProduto.setEnabled(false);
                campoNome.setEnabled(false);
                campoDescricao.setEnabled(false);
                campoQtdEntrada.setEnabled(false);
                campoQtdSaida.setEnabled(false);
                campoCodBarras.setEnabled(false);
                campoQtdItemPedido.setEnabled(false);
                botaoSalvarItemPedido.setEnabled(false);
                botaoDeletarItemPedido.setEnabled(false);
                botaoBuscarProduto.setEnabled(false);
                botaoBuscarPedido.setEnabled(false);
                break;
            case editar:
                campoIdPedido.setEnabled(true);
                campoDataPedido.setEnabled(true);
                campoIdProduto.setEnabled(true);
                campoNome.setEnabled(false);
                campoDescricao.setEnabled(false);
                campoQtdEntrada.setEnabled(false);
                campoQtdSaida.setEnabled(false);
                campoCodBarras.setEnabled(false);
                campoQtdItemPedido.setEnabled(true);
                botaoSalvarItemPedido.setEnabled(true);
                botaoDeletarItemPedido.setEnabled(true);
                botaoBuscarProduto.setEnabled(true);
                botaoBuscarPedido.setEnabled(true);
                break;
            case excluir:
                campoIdPedido.setEnabled(true);
                campoDataPedido.setEnabled(false);
                campoIdProduto.setEnabled(false);
                campoNome.setEnabled(false);
                campoDescricao.setEnabled(false);
                campoQtdEntrada.setEnabled(false);
                campoQtdSaida.setEnabled(false);
                campoCodBarras.setEnabled(false);
                campoQtdItemPedido.setEnabled(false);
                botaoSalvarItemPedido.setEnabled(false);
                botaoDeletarItemPedido.setEnabled(true);
                botaoBuscarProduto.setEnabled(true);
                botaoBuscarPedido.setEnabled(true);
                break;
            default:
                campoIdPedido.setEnabled(false);
                campoDataPedido.setEnabled(false);
                campoIdProduto.setEnabled(false);
                campoNome.setEnabled(false);
                campoDescricao.setEnabled(false);
                campoQtdEntrada.setEnabled(false);
                campoQtdSaida.setEnabled(false);
                campoCodBarras.setEnabled(false);
                campoQtdItemPedido.setEnabled(false);
                botaoSalvarItemPedido.setEnabled(false);
                botaoDeletarItemPedido.setEnabled(false);
                botaoBuscarProduto.setEnabled(false);
                botaoBuscarPedido.setEnabled(false);
                break;
        }
    }
    
    enum TipoBotao {
        incluir,
        editar,
        excluir
    }
    
    private void limpaCampos() {
        campoIdPedido.setText("");
        campoDataPedido.setText("");
        campoIdProduto.setText("");
        campoNome.setText("");
        campoDescricao.setText("");
        campoQtdEntrada.setText("");
        campoQtdSaida.setText("");
        campoCodBarras.setText("");
        campoQtdItemPedido.setText("");
    }
    
    private void limpaCamposItemPedido() {
        campoIdProduto.setText("");
        campoNome.setText("");
        campoDescricao.setText("");
        campoQtdEntrada.setText("");
        campoQtdSaida.setText("");
        campoCodBarras.setText("");
        campoQtdItemPedido.setText("");
    }
    
    public Runnable newAtualizaPedidosAction() {
        return new Runnable() {
            public void run() {
                try {
//                    IPedido iPedido = new PedidoDAO();
//                    List<Object[]> rows = iPedido.getAll();
//                    List<Pedido> result = new ArrayList<>(rows.size());

                    IPedido iPedido = new PedidoDAO();
                    copiaIdPedido = iPedido.findUltimoId();

                    pedido = iPedido.findById(copiaIdPedido);
                    
                    if (pedido != null) {
                        painelPedidos.setText("");
                        
                        String strPedido = " ===== Pedido ===== \n";
                        strPedido += "Id: " + pedido.getId() + "\n";
                        strPedido += "Data do Pedido: " + pedido.getDataPedido() + "\n";
                        strPedido += "\n ===== Item do Pedido ===== \n";

                        for (ItemPedido ip : listItemPedido) {
                            strPedido += "Nome: " + ip.getProdutos().getNome() + "\n";
                            strPedido += "Qtd. do pedido: " + ip.getQtd() + "\n";
                        }
                                        
//                    for (Object[] row : rows) {
//                        result.add(new Pedido((Integer) row[0], (String) row[1], (Integer) row[2]));
//                    }
                    
//                    for (Pedido pedido : result) {                
//                        strProduto += pedido.getId() + " - ";
//                        strProduto += pedido.getDataPedido() + " | ";
//                        strProduto += "Qtd.:" + pedido.getQtd() + " | ";
//                        
//                        strProduto += "Pessoa: " + pedido.getPessoa() != null ? pedido.getPessoa().getNome() : " nda | \n";
////                        strProduto += "Produto: " + pedido.getProduto() != null ? pedido.getProduto().getNome() : " nda \n";
//                    }
                    
                        painelPedidos.setText(strPedido);
                        limpaCamposItemPedido();
                    }
                    
                } catch (PersistenceException ex) {
                    JOptionPane.showMessageDialog(CadastroPedido.this,
                        ex.getMessage(), "Erro ao consultar Produto(s)", JOptionPane.ERROR_MESSAGE);
                }
            }
        };
    }
    
    public Runnable newAtualizaProdutosAction() {
        return new Runnable() {
            public void run() {
                try {
                    IProduto iProduto = new ProdutoDAO();
                    List<Object[]> rows = iProduto.getAll();
                    List<Produto> result = new ArrayList<>(rows.size());
                    String strProduto = "";
                                        
                    for (Object[] row : rows) {
                        result.add(new Produto((Integer) row[0], (String) row[1], (String) row[2], 
                                (Integer) row[3], (Integer) row[4], (String) row[5]));
                    }
                    
                    for (Produto produto : result) {                
                        strProduto += produto.getId() + " - ";
                        strProduto += produto.getNome() + " | ";
                        strProduto += "Qtd.Ent.:" + produto.getQtdEntrada() + " | ";
                        
                        String strQtdSaida = produto.getQtdSaida() == null ? "0" : produto.getQtdSaida().toString();
                        
                        strProduto += "Qtd.Sai.:" + strQtdSaida + "\n";
                    }
                    
                    painelProdutos.setText(strProduto);
                    limpaCamposItemPedido();
                } catch (PersistenceException ex) {
                    JOptionPane.showMessageDialog(CadastroPedido.this,
                        ex.getMessage(), "Erro ao consultar Produto(s)", JOptionPane.ERROR_MESSAGE);
                }
            }
        };
    }
}
